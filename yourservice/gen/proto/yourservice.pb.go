// Code generated by protoc-gen-go.
// source: yourservice.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	yourservice.proto
	shared.proto

It has these top-level messages:
	SayHelloRequest
	SayHelloResponse
	EatAppleRequest
	EatAppleResponse
	CommonValues
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type SayHelloRequest struct {
	Values   *CommonValues `protobuf:"bytes,1,opt,name=values" json:"values,omitempty"`
	YourName string        `protobuf:"bytes,2,opt,name=yourName" json:"yourName,omitempty"`
}

func (m *SayHelloRequest) Reset()                    { *m = SayHelloRequest{} }
func (m *SayHelloRequest) String() string            { return proto1.CompactTextString(m) }
func (*SayHelloRequest) ProtoMessage()               {}
func (*SayHelloRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SayHelloRequest) GetValues() *CommonValues {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *SayHelloRequest) GetYourName() string {
	if m != nil {
		return m.YourName
	}
	return ""
}

type SayHelloResponse struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *SayHelloResponse) Reset()                    { *m = SayHelloResponse{} }
func (m *SayHelloResponse) String() string            { return proto1.CompactTextString(m) }
func (*SayHelloResponse) ProtoMessage()               {}
func (*SayHelloResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SayHelloResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type EatAppleRequest struct {
	Num         int32  `protobuf:"varint,1,opt,name=num" json:"num,omitempty"`
	StringValue string `protobuf:"bytes,2,opt,name=stringValue" json:"stringValue,omitempty"`
	BoolValue   bool   `protobuf:"varint,3,opt,name=boolValue" json:"boolValue,omitempty"`
}

func (m *EatAppleRequest) Reset()                    { *m = EatAppleRequest{} }
func (m *EatAppleRequest) String() string            { return proto1.CompactTextString(m) }
func (*EatAppleRequest) ProtoMessage()               {}
func (*EatAppleRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *EatAppleRequest) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *EatAppleRequest) GetStringValue() string {
	if m != nil {
		return m.StringValue
	}
	return ""
}

func (m *EatAppleRequest) GetBoolValue() bool {
	if m != nil {
		return m.BoolValue
	}
	return false
}

type EatAppleResponse struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *EatAppleResponse) Reset()                    { *m = EatAppleResponse{} }
func (m *EatAppleResponse) String() string            { return proto1.CompactTextString(m) }
func (*EatAppleResponse) ProtoMessage()               {}
func (*EatAppleResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *EatAppleResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto1.RegisterType((*SayHelloRequest)(nil), "proto.SayHelloRequest")
	proto1.RegisterType((*SayHelloResponse)(nil), "proto.SayHelloResponse")
	proto1.RegisterType((*EatAppleRequest)(nil), "proto.EatAppleRequest")
	proto1.RegisterType((*EatAppleResponse)(nil), "proto.EatAppleResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for YourService service

type YourServiceClient interface {
	SayHello(ctx context.Context, in *SayHelloRequest, opts ...grpc.CallOption) (*SayHelloResponse, error)
	EatApple(ctx context.Context, in *EatAppleRequest, opts ...grpc.CallOption) (*EatAppleResponse, error)
}

type yourServiceClient struct {
	cc *grpc.ClientConn
}

func NewYourServiceClient(cc *grpc.ClientConn) YourServiceClient {
	return &yourServiceClient{cc}
}

func (c *yourServiceClient) SayHello(ctx context.Context, in *SayHelloRequest, opts ...grpc.CallOption) (*SayHelloResponse, error) {
	out := new(SayHelloResponse)
	err := grpc.Invoke(ctx, "/proto.YourService/sayHello", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yourServiceClient) EatApple(ctx context.Context, in *EatAppleRequest, opts ...grpc.CallOption) (*EatAppleResponse, error) {
	out := new(EatAppleResponse)
	err := grpc.Invoke(ctx, "/proto.YourService/eatApple", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for YourService service

type YourServiceServer interface {
	SayHello(context.Context, *SayHelloRequest) (*SayHelloResponse, error)
	EatApple(context.Context, *EatAppleRequest) (*EatAppleResponse, error)
}

func RegisterYourServiceServer(s *grpc.Server, srv YourServiceServer) {
	s.RegisterService(&_YourService_serviceDesc, srv)
}

func _YourService_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SayHelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YourServiceServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.YourService/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YourServiceServer).SayHello(ctx, req.(*SayHelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _YourService_EatApple_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EatAppleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YourServiceServer).EatApple(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.YourService/EatApple",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YourServiceServer).EatApple(ctx, req.(*EatAppleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _YourService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.YourService",
	HandlerType: (*YourServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "sayHello",
			Handler:    _YourService_SayHello_Handler,
		},
		{
			MethodName: "eatApple",
			Handler:    _YourService_EatApple_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "yourservice.proto",
}

func init() { proto1.RegisterFile("yourservice.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 274 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x50, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x6d, 0x2c, 0xad, 0xc9, 0x44, 0x68, 0x5d, 0x41, 0x43, 0xf0, 0x10, 0x72, 0x0a, 0x28, 0x3d,
	0xd4, 0xb3, 0x07, 0x11, 0xc1, 0x93, 0x87, 0x2d, 0x08, 0x7a, 0xdb, 0xd6, 0xa1, 0x16, 0x92, 0x4c,
	0xdc, 0x49, 0x0a, 0xfd, 0x06, 0x7f, 0x5a, 0xb2, 0xbb, 0x4d, 0x24, 0x1e, 0x3c, 0xed, 0xce, 0x9b,
	0x79, 0xf3, 0xde, 0x3c, 0x38, 0x3f, 0x50, 0xa3, 0x19, 0xf5, 0x7e, 0xb7, 0xc1, 0x45, 0xa5, 0xa9,
	0x26, 0x31, 0x31, 0x4f, 0x7c, 0xc6, 0x9f, 0x4a, 0xe3, 0x87, 0x05, 0xd3, 0x77, 0x98, 0xad, 0xd4,
	0xe1, 0x19, 0xf3, 0x9c, 0x24, 0x7e, 0x35, 0xc8, 0xb5, 0xb8, 0x81, 0xe9, 0x5e, 0xe5, 0x0d, 0x72,
	0xe4, 0x25, 0x5e, 0x16, 0x2e, 0x2f, 0xec, 0xe8, 0xe2, 0x91, 0x8a, 0x82, 0xca, 0x57, 0xd3, 0x92,
	0x6e, 0x44, 0xc4, 0xe0, 0xb7, 0x4a, 0x2f, 0xaa, 0xc0, 0xe8, 0x24, 0xf1, 0xb2, 0x40, 0x76, 0x75,
	0x7a, 0x0b, 0xf3, 0x7e, 0x37, 0x57, 0x54, 0x32, 0x8a, 0x08, 0x4e, 0x0b, 0x64, 0x56, 0x5b, 0x34,
	0xdb, 0x03, 0x79, 0x2c, 0xd3, 0x0d, 0xcc, 0x9e, 0x54, 0xfd, 0x50, 0x55, 0x39, 0x1e, 0x9d, 0xcc,
	0x61, 0x5c, 0x36, 0x85, 0x19, 0x9c, 0xc8, 0xf6, 0x2b, 0x12, 0x08, 0xb9, 0xd6, 0xbb, 0x72, 0x6b,
	0x6c, 0x38, 0xc5, 0xdf, 0x90, 0xb8, 0x86, 0x60, 0x4d, 0x94, 0xdb, 0xfe, 0x38, 0xf1, 0x32, 0x5f,
	0xf6, 0x40, 0x6b, 0xa9, 0x17, 0xf9, 0xcf, 0xd2, 0xf2, 0xdb, 0x83, 0xf0, 0x8d, 0x1a, 0xbd, 0xb2,
	0x39, 0x8a, 0x7b, 0xf0, 0xd9, 0x1d, 0x24, 0x2e, 0x5d, 0x2a, 0x83, 0xf4, 0xe2, 0xab, 0x3f, 0xb8,
	0x95, 0x49, 0x47, 0x2d, 0x1d, 0x9d, 0x78, 0x47, 0x1f, 0x9c, 0xdc, 0xd1, 0x87, 0x2e, 0xd3, 0xd1,
	0x7a, 0x6a, 0x3a, 0x77, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x53, 0x04, 0xb7, 0x3b, 0xdb, 0x01,
	0x00, 0x00,
}
